/* test/mersenne_twister.cpp
 *
 * Copyright (C) 2012 James Hirschorn <James.Hirschorn@gmail.com>
 *
 * Use, modification and distribution are subject to 
 * the BOOST Software License, Version 1.0. 
 * (See accompanying file LICENSE.txt)
 */

/*! \file test/mersenne_twister.cpp
	\brief unit tests for the mersenne twister PRNG

	\author James Hirschorn
	\date February 26, 2012
*/

#include <algorithm>
using std::swap;

#include <iomanip>
#include <iostream>
#include <iterator>
#include <sstream>
#include <stdexcept>
#include <string>
#include <vector>

#include <boost/bind.hpp>
#include <boost/foreach.hpp>

#include <boost/mpl/apply.hpp>
#include <boost/mpl/comparison.hpp>
#include <boost/mpl/empty_sequence.hpp>
#include <boost/mpl/equal_to.hpp>
#include <boost/mpl/insert.hpp>
#include <boost/mpl/list.hpp>
#include <boost/mpl/front.hpp>
#include <boost/mpl/pair.hpp>
#include <boost/mpl/placeholders.hpp>
#include <boost/mpl/string.hpp>
#include <boost/mpl/vector_c.hpp>

#include <boost/random/mersenne_twister.hpp>

#include <qfcl/defines.hpp>
#include <qfcl/utility/names.hpp>
#include <qfcl/utility/tmp.hpp>
#include <qfcl/random/engine/mersenne_twister.hpp>
using namespace qfcl::random;

#include "test_generator.ipp"
using namespace boost::unit_test_framework;

#include "engine_common.ipp"

/*! \ingroup TestSuite
	@{
*/

// alias
namespace mpl = boost::mpl;

/*! \brief This is a list of all mersenne_twister generators, paired with their name,
    and again paired with their reverse versions.
*/
typedef mpl::list< mpl::pair<mt11213a,		reverse_mt11213a>,
				   mpl::pair<mt11213b,		reverse_mt11213b>,
				   mpl::pair<mt19937,		reverse_mt19937>,
				   mpl::pair<mt19937_64,	reverse_mt19937_64> >
mersenne_twister_engine_pairs;
//! \cond
// a flat list of all engines, computed from \c mersenne_twister_engine_pairs
typedef qfcl::tmp::list_of_flattened_pairs<mersenne_twister_engine_pairs>::type
mersenne_twister_engines;
//! \endcond

/*! \brief A list of all mersenne twisters that have a boost version for regression.
*/
typedef mpl::list< mpl::pair<mt11213b,		boost::random::mt11213b>,
				   mpl::pair<mt19937,		boost::random::mt19937>,
				   mpl::pair<mt19937_64,	boost::random::mt19937_64> >
boost_regression;

//! for formatting output
const size_t indent_width = 10;

// Mersenne Twister test suite
BOOST_AUTO_TEST_SUITE(mersenne_twister)
	
//! prints a message heading for the \c mersenne_twister test suite
void print_mersenne_twister_header()
{
	using std::string;
	std::ostringstream oss;

#ifdef QFCL_VERBOSE_TEST
	/* format engines names for output */

	auto engine_names = qfcl::names::get_name_or_typenames<mersenne_twister_engines>();

	BOOST_FOREACH( std::string s, engine_names )
	{
		oss << std::setw(indent_width) << "" << s << std::endl;
	}
#endif	// QFCL_VERBOSE_TEST

	BOOST_TEST_MESSAGE( "\nTesting the Mersenne Twister engines:\n" << oss.str() );
}

//! Regression against boost
BOOST_AUTO_TEST_CASE_TEMPLATE(boostRegression, pair, boost_regression)
{	
	// The following refers to the entire test suite
	// (it is not specific to this test case).
	if ( qfcl::tmp::is_first<boost_regression, pair>::value )
		print_mersenne_twister_header();

	const unsigned initial_seed = 1234;
	const size_t testSize = 100000;

	BOOST_TEST_MESSAGE("Regressing QFCL's " << mpl::c_str<pair::first::name>::value 
		<< " against boost with seed " << initial_seed << " for " << testSize << " variates ...");
	pair::first qfclMT(initial_seed);
	pair::second boostMT(initial_seed);

	for (size_t i = 0; i < testSize; ++i)
	{
		pair::first::result_type qfcl_result = qfclMT();
		pair::second::result_type boost_result = boostMT();
		BOOST_REQUIRE_MESSAGE( qfcl_result == boost_result, "critical check qfclMT() == boostMT() [" 
			<< qfcl_result << " != " << boost_result << "] failed at iteration " << i);
	}
}

/*! \brief Tests mt19937 initialized with multiple seeds against the output provided
	by the authors of MT.
*/
BOOST_AUTO_TEST_CASE(multiSeedingMT19937)
{
	QFCL_CREATE_VECTOR(key, mt19937::result_type, 0x123, 0x234, 0x345, 0x456);

	BOOST_TEST_MESSAGE("Testing the ouput of the " << mpl::c_str<mt19937::name>::value << " generator initialized with 4 seeds: " 
		<< std::hex << std::showbase << key[0] << ", " << key[1] << ", " << key[2] << ", " << key[3] 
		<< " against the output provided by the MT authors ...");

	mt19937 MT( key.begin(), key.end() );

	static const mt19937::result_type referenceValues[] = {
        UINT32_C(1067595299), UINT32_C(955945823),  UINT32_C(477289528),  UINT32_C(4107218783), UINT32_C(4228976476),
        UINT32_C(3344332714), UINT32_C(3355579695), UINT32_C(227628506),  UINT32_C(810200273),  UINT32_C(2591290167),
        UINT32_C(2560260675), UINT32_C(3242736208), UINT32_C(646746669),  UINT32_C(1479517882), UINT32_C(4245472273),
        UINT32_C(1143372638), UINT32_C(3863670494), UINT32_C(3221021970), UINT32_C(1773610557), UINT32_C(1138697238),
        UINT32_C(1421897700), UINT32_C(1269916527), UINT32_C(2859934041), UINT32_C(1764463362), UINT32_C(3874892047),
        UINT32_C(3965319921), UINT32_C(72549643),   UINT32_C(2383988930), UINT32_C(2600218693), UINT32_C(3237492380),
        UINT32_C(2792901476), UINT32_C(725331109),  UINT32_C(605841842),  UINT32_C(271258942),  UINT32_C(715137098),
        UINT32_C(3297999536), UINT32_C(1322965544), UINT32_C(4229579109), UINT32_C(1395091102), UINT32_C(3735697720),
        UINT32_C(2101727825), UINT32_C(3730287744), UINT32_C(2950434330), UINT32_C(1661921839), UINT32_C(2895579582),
        UINT32_C(2370511479), UINT32_C(1004092106), UINT32_C(2247096681), UINT32_C(2111242379), UINT32_C(3237345263),
        UINT32_C(4082424759), UINT32_C(219785033),  UINT32_C(2454039889), UINT32_C(3709582971), UINT32_C(835606218),
        UINT32_C(2411949883), UINT32_C(2735205030), UINT32_C(756421180),  UINT32_C(2175209704), UINT32_C(1873865952),
        UINT32_C(2762534237), UINT32_C(4161807854), UINT32_C(3351099340), UINT32_C(181129879),  UINT32_C(3269891896),
        UINT32_C(776029799),  UINT32_C(2218161979), UINT32_C(3001745796), UINT32_C(1866825872), UINT32_C(2133627728),
        UINT32_C(34862734),   UINT32_C(1191934573), UINT32_C(3102311354), UINT32_C(2916517763), UINT32_C(1012402762),
        UINT32_C(2184831317), UINT32_C(4257399449), UINT32_C(2899497138), UINT32_C(3818095062), UINT32_C(3030756734),
        UINT32_C(1282161629), UINT32_C(420003642),  UINT32_C(2326421477), UINT32_C(2741455717), UINT32_C(1278020671),
        UINT32_C(3744179621), UINT32_C(271777016),  UINT32_C(2626330018), UINT32_C(2560563991), UINT32_C(3055977700),
        UINT32_C(4233527566), UINT32_C(1228397661), UINT32_C(3595579322), UINT32_C(1077915006), UINT32_C(2395931898),
        UINT32_C(1851927286), UINT32_C(3013683506), UINT32_C(1999971931), UINT32_C(3006888962), UINT32_C(1049781534),
        UINT32_C(1488758959), UINT32_C(3491776230), UINT32_C(104418065),  UINT32_C(2448267297), UINT32_C(3075614115),
        UINT32_C(3872332600), UINT32_C(891912190),  UINT32_C(3936547759), UINT32_C(2269180963), UINT32_C(2633455084),
        UINT32_C(1047636807), UINT32_C(2604612377), UINT32_C(2709305729), UINT32_C(1952216715), UINT32_C(207593580),
        UINT32_C(2849898034), UINT32_C(670771757),  UINT32_C(2210471108), UINT32_C(467711165),  UINT32_C(263046873),
        UINT32_C(3569667915), UINT32_C(1042291111), UINT32_C(3863517079), UINT32_C(1464270005), UINT32_C(2758321352),
        UINT32_C(3790799816), UINT32_C(2301278724), UINT32_C(3106281430), UINT32_C(7974801),    UINT32_C(2792461636),
        UINT32_C(555991332),  UINT32_C(621766759),  UINT32_C(1322453093), UINT32_C(853629228),  UINT32_C(686962251),
        UINT32_C(1455120532), UINT32_C(957753161),  UINT32_C(1802033300), UINT32_C(1021534190), UINT32_C(3486047311),
        UINT32_C(1902128914), UINT32_C(3701138056), UINT32_C(4176424663), UINT32_C(1795608698), UINT32_C(560858864),
        UINT32_C(3737752754), UINT32_C(3141170998), UINT32_C(1553553385), UINT32_C(3367807274), UINT32_C(711546358),
        UINT32_C(2475125503), UINT32_C(262969859),  UINT32_C(251416325),  UINT32_C(2980076994), UINT32_C(1806565895),
        UINT32_C(969527843),  UINT32_C(3529327173), UINT32_C(2736343040), UINT32_C(2987196734), UINT32_C(1649016367),
        UINT32_C(2206175811), UINT32_C(3048174801), UINT32_C(3662503553), UINT32_C(3138851612), UINT32_C(2660143804),
        UINT32_C(1663017612), UINT32_C(1816683231), UINT32_C(411916003),  UINT32_C(3887461314), UINT32_C(2347044079),
        UINT32_C(1015311755), UINT32_C(1203592432), UINT32_C(2170947766), UINT32_C(2569420716), UINT32_C(813872093),
        UINT32_C(1105387678), UINT32_C(1431142475), UINT32_C(220570551),  UINT32_C(4243632715), UINT32_C(4179591855),
        UINT32_C(2607469131), UINT32_C(3090613241), UINT32_C(282341803),  UINT32_C(1734241730), UINT32_C(1391822177),
        UINT32_C(1001254810), UINT32_C(827927915),  UINT32_C(1886687171), UINT32_C(3935097347), UINT32_C(2631788714),
        UINT32_C(3905163266), UINT32_C(110554195),  UINT32_C(2447955646), UINT32_C(3717202975), UINT32_C(3304793075),
        UINT32_C(3739614479), UINT32_C(3059127468), UINT32_C(953919171),  UINT32_C(2590123714), UINT32_C(1132511021),
        UINT32_C(3795593679), UINT32_C(2788030429), UINT32_C(982155079),  UINT32_C(3472349556), UINT32_C(859942552),
        UINT32_C(2681007391), UINT32_C(2299624053), UINT32_C(647443547),  UINT32_C(233600422),  UINT32_C(608168955),
        UINT32_C(3689327453), UINT32_C(1849778220), UINT32_C(1608438222), UINT32_C(3968158357), UINT32_C(2692977776),
        UINT32_C(2851872572), UINT32_C(246750393),  UINT32_C(3582818628), UINT32_C(3329652309), UINT32_C(4036366910),
        UINT32_C(1012970930), UINT32_C(950780808),  UINT32_C(3959768744), UINT32_C(2538550045), UINT32_C(191422718),
        UINT32_C(2658142375), UINT32_C(3276369011), UINT32_C(2927737484), UINT32_C(1234200027), UINT32_C(1920815603),
        UINT32_C(3536074689), UINT32_C(1535612501), UINT32_C(2184142071), UINT32_C(3276955054), UINT32_C(428488088),
        UINT32_C(2378411984), UINT32_C(4059769550), UINT32_C(3913744741), UINT32_C(2732139246), UINT32_C(64369859),
        UINT32_C(3755670074), UINT32_C(842839565),  UINT32_C(2819894466), UINT32_C(2414718973), UINT32_C(1010060670),
        UINT32_C(1839715346), UINT32_C(2410311136), UINT32_C(152774329),  UINT32_C(3485009480), UINT32_C(4102101512),
        UINT32_C(2852724304), UINT32_C(879944024),  UINT32_C(1785007662), UINT32_C(2748284463), UINT32_C(1354768064),
        UINT32_C(3267784736), UINT32_C(2269127717), UINT32_C(3001240761), UINT32_C(3179796763), UINT32_C(895723219),
        UINT32_C(865924942),  UINT32_C(4291570937), UINT32_C(89355264),   UINT32_C(1471026971), UINT32_C(4114180745),
        UINT32_C(3201939751), UINT32_C(2867476999), UINT32_C(2460866060), UINT32_C(3603874571), UINT32_C(2238880432),
        UINT32_C(3308416168), UINT32_C(2072246611), UINT32_C(2755653839), UINT32_C(3773737248), UINT32_C(1709066580),
        UINT32_C(4282731467), UINT32_C(2746170170), UINT32_C(2832568330), UINT32_C(433439009),  UINT32_C(3175778732),
        UINT32_C(26248366),   UINT32_C(2551382801), UINT32_C(183214346),  UINT32_C(3893339516), UINT32_C(1928168445),
        UINT32_C(1337157619), UINT32_C(3429096554), UINT32_C(3275170900), UINT32_C(1782047316), UINT32_C(4264403756),
        UINT32_C(1876594403), UINT32_C(4289659572), UINT32_C(3223834894), UINT32_C(1728705513), UINT32_C(4068244734),
        UINT32_C(2867840287), UINT32_C(1147798696), UINT32_C(302879820),  UINT32_C(1730407747), UINT32_C(1923824407),
        UINT32_C(1180597908), UINT32_C(1569786639), UINT32_C(198796327),  UINT32_C(560793173),  UINT32_C(2107345620),
        UINT32_C(2705990316), UINT32_C(3448772106), UINT32_C(3678374155), UINT32_C(758635715),  UINT32_C(884524671),
        UINT32_C(486356516),  UINT32_C(1774865603), UINT32_C(3881226226), UINT32_C(2635213607), UINT32_C(1181121587),
        UINT32_C(1508809820), UINT32_C(3178988241), UINT32_C(1594193633), UINT32_C(1235154121), UINT32_C(326117244),
        UINT32_C(2304031425), UINT32_C(937054774),  UINT32_C(2687415945), UINT32_C(3192389340), UINT32_C(2003740439),
        UINT32_C(1823766188), UINT32_C(2759543402), UINT32_C(10067710),   UINT32_C(1533252662), UINT32_C(4132494984),
        UINT32_C(82378136),   UINT32_C(420615890),  UINT32_C(3467563163), UINT32_C(541562091),  UINT32_C(3535949864),
        UINT32_C(2277319197), UINT32_C(3330822853), UINT32_C(3215654174), UINT32_C(4113831979), UINT32_C(4204996991),
        UINT32_C(2162248333), UINT32_C(3255093522), UINT32_C(2219088909), UINT32_C(2978279037), UINT32_C(255818579),
        UINT32_C(2859348628), UINT32_C(3097280311), UINT32_C(2569721123), UINT32_C(1861951120), UINT32_C(2907080079),
        UINT32_C(2719467166), UINT32_C(998319094),  UINT32_C(2521935127), UINT32_C(2404125338), UINT32_C(259456032),
        UINT32_C(2086860995), UINT32_C(1839848496), UINT32_C(1893547357), UINT32_C(2527997525), UINT32_C(1489393124),
        UINT32_C(2860855349), UINT32_C(76448234),   UINT32_C(2264934035), UINT32_C(744914583),  UINT32_C(2586791259),
        UINT32_C(1385380501), UINT32_C(66529922),   UINT32_C(1819103258), UINT32_C(1899300332), UINT32_C(2098173828),
        UINT32_C(1793831094), UINT32_C(276463159),  UINT32_C(360132945),  UINT32_C(4178212058), UINT32_C(595015228),
        UINT32_C(177071838),  UINT32_C(2800080290), UINT32_C(1573557746), UINT32_C(1548998935), UINT32_C(378454223),
        UINT32_C(1460534296), UINT32_C(1116274283), UINT32_C(3112385063), UINT32_C(3709761796), UINT32_C(827999348),
        UINT32_C(3580042847), UINT32_C(1913901014), UINT32_C(614021289),  UINT32_C(4278528023), UINT32_C(1905177404),
        UINT32_C(45407939),   UINT32_C(3298183234), UINT32_C(1184848810), UINT32_C(3644926330), UINT32_C(3923635459),
        UINT32_C(1627046213), UINT32_C(3677876759), UINT32_C(969772772),  UINT32_C(1160524753), UINT32_C(1522441192),
        UINT32_C(452369933),  UINT32_C(1527502551), UINT32_C(832490847),  UINT32_C(1003299676), UINT32_C(1071381111),
        UINT32_C(2891255476), UINT32_C(973747308),  UINT32_C(4086897108), UINT32_C(1847554542), UINT32_C(3895651598),
        UINT32_C(2227820339), UINT32_C(1621250941), UINT32_C(2881344691), UINT32_C(3583565821), UINT32_C(3510404498),
        UINT32_C(849362119),  UINT32_C(862871471),  UINT32_C(797858058),  UINT32_C(2867774932), UINT32_C(2821282612),
        UINT32_C(3272403146), UINT32_C(3997979905), UINT32_C(209178708),  UINT32_C(1805135652), UINT32_C(6783381),
        UINT32_C(2823361423), UINT32_C(792580494),  UINT32_C(4263749770), UINT32_C(776439581),  UINT32_C(3798193823),
        UINT32_C(2853444094), UINT32_C(2729507474), UINT32_C(1071873341), UINT32_C(1329010206), UINT32_C(1289336450),
        UINT32_C(3327680758), UINT32_C(2011491779), UINT32_C(80157208),   UINT32_C(922428856),  UINT32_C(1158943220),
        UINT32_C(1667230961), UINT32_C(2461022820), UINT32_C(2608845159), UINT32_C(387516115),  UINT32_C(3345351910),
        UINT32_C(1495629111), UINT32_C(4098154157), UINT32_C(3156649613), UINT32_C(3525698599), UINT32_C(4134908037),
        UINT32_C(446713264),  UINT32_C(2137537399), UINT32_C(3617403512), UINT32_C(813966752),  UINT32_C(1157943946),
        UINT32_C(3734692965), UINT32_C(1680301658), UINT32_C(3180398473), UINT32_C(3509854711), UINT32_C(2228114612),
        UINT32_C(1008102291), UINT32_C(486805123),  UINT32_C(863791847),  UINT32_C(3189125290), UINT32_C(1050308116),
        UINT32_C(3777341526), UINT32_C(4291726501), UINT32_C(844061465),  UINT32_C(1347461791), UINT32_C(2826481581),
        UINT32_C(745465012),  UINT32_C(2055805750), UINT32_C(4260209475), UINT32_C(2386693097), UINT32_C(2980646741),
        UINT32_C(447229436),  UINT32_C(2077782664), UINT32_C(1232942813), UINT32_C(4023002732), UINT32_C(1399011509),
        UINT32_C(3140569849), UINT32_C(2579909222), UINT32_C(3794857471), UINT32_C(900758066),  UINT32_C(2887199683),
        UINT32_C(1720257997), UINT32_C(3367494931), UINT32_C(2668921229), UINT32_C(955539029),  UINT32_C(3818726432),
        UINT32_C(1105704962), UINT32_C(3889207255), UINT32_C(2277369307), UINT32_C(2746484505), UINT32_C(1761846513),
        UINT32_C(2413916784), UINT32_C(2685127085), UINT32_C(4240257943), UINT32_C(1166726899), UINT32_C(4215215715),
        UINT32_C(3082092067), UINT32_C(3960461946), UINT32_C(1663304043), UINT32_C(2087473241), UINT32_C(4162589986),
        UINT32_C(2507310778), UINT32_C(1579665506), UINT32_C(767234210),  UINT32_C(970676017),  UINT32_C(492207530),
        UINT32_C(1441679602), UINT32_C(1314785090), UINT32_C(3262202570), UINT32_C(3417091742), UINT32_C(1561989210),
        UINT32_C(3011406780), UINT32_C(1146609202), UINT32_C(3262321040), UINT32_C(1374872171), UINT32_C(1634688712),
        UINT32_C(1280458888), UINT32_C(2230023982), UINT32_C(419323804),  UINT32_C(3262899800), UINT32_C(39783310),
        UINT32_C(1641619040), UINT32_C(1700368658), UINT32_C(2207946628), UINT32_C(2571300939), UINT32_C(2424079766),
        UINT32_C(780290914),  UINT32_C(2715195096), UINT32_C(3390957695), UINT32_C(163151474),  UINT32_C(2309534542),
        UINT32_C(1860018424), UINT32_C(555755123),  UINT32_C(280320104),  UINT32_C(1604831083), UINT32_C(2713022383),
        UINT32_C(1728987441), UINT32_C(3639955502), UINT32_C(623065489),  UINT32_C(3828630947), UINT32_C(4275479050),
        UINT32_C(3516347383), UINT32_C(2343951195), UINT32_C(2430677756), UINT32_C(635534992),  UINT32_C(3868699749),
        UINT32_C(808442435),  UINT32_C(3070644069), UINT32_C(4282166003), UINT32_C(2093181383), UINT32_C(2023555632),
        UINT32_C(1568662086), UINT32_C(3422372620), UINT32_C(4134522350), UINT32_C(3016979543), UINT32_C(3259320234),
        UINT32_C(2888030729), UINT32_C(3185253876), UINT32_C(4258779643), UINT32_C(1267304371), UINT32_C(1022517473),
        UINT32_C(815943045),  UINT32_C(929020012),  UINT32_C(2995251018), UINT32_C(3371283296), UINT32_C(3608029049),
        UINT32_C(2018485115), UINT32_C(122123397),  UINT32_C(2810669150), UINT32_C(1411365618), UINT32_C(1238391329),
        UINT32_C(1186786476), UINT32_C(3155969091), UINT32_C(2242941310), UINT32_C(1765554882), UINT32_C(279121160),
        UINT32_C(4279838515), UINT32_C(1641578514), UINT32_C(3796324015), UINT32_C(13351065),   UINT32_C(103516986),
        UINT32_C(1609694427), UINT32_C(551411743),  UINT32_C(2493771609), UINT32_C(1316337047), UINT32_C(3932650856),
        UINT32_C(4189700203), UINT32_C(463397996),  UINT32_C(2937735066), UINT32_C(1855616529), UINT32_C(2626847990),
        UINT32_C(55091862),   UINT32_C(3823351211), UINT32_C(753448970),  UINT32_C(4045045500), UINT32_C(1274127772),
        UINT32_C(1124182256), UINT32_C(92039808),   UINT32_C(2126345552), UINT32_C(425973257),  UINT32_C(386287896),
        UINT32_C(2589870191), UINT32_C(1987762798), UINT32_C(4084826973), UINT32_C(2172456685), UINT32_C(3366583455),
        UINT32_C(3602966653), UINT32_C(2378803535), UINT32_C(2901764433), UINT32_C(3716929006), UINT32_C(3710159000),
        UINT32_C(2653449155), UINT32_C(3469742630), UINT32_C(3096444476), UINT32_C(3932564653), UINT32_C(2595257433),
        UINT32_C(318974657),  UINT32_C(3146202484), UINT32_C(853571438),  UINT32_C(144400272),  UINT32_C(3768408841),
        UINT32_C(782634401),  UINT32_C(2161109003), UINT32_C(570039522),  UINT32_C(1886241521), UINT32_C(14249488),
        UINT32_C(2230804228), UINT32_C(1604941699), UINT32_C(3928713335), UINT32_C(3921942509), UINT32_C(2155806892),
        UINT32_C(134366254),  UINT32_C(430507376),  UINT32_C(1924011722), UINT32_C(276713377),  UINT32_C(196481886),
        UINT32_C(3614810992), UINT32_C(1610021185), UINT32_C(1785757066), UINT32_C(851346168),  UINT32_C(3761148643),
        UINT32_C(2918835642), UINT32_C(3364422385), UINT32_C(3012284466), UINT32_C(3735958851), UINT32_C(2643153892),
        UINT32_C(3778608231), UINT32_C(1164289832), UINT32_C(205853021),  UINT32_C(2876112231), UINT32_C(3503398282),
        UINT32_C(3078397001), UINT32_C(3472037921), UINT32_C(1748894853), UINT32_C(2740861475), UINT32_C(316056182),
        UINT32_C(1660426908), UINT32_C(168885906),  UINT32_C(956005527),  UINT32_C(3984354789), UINT32_C(566521563),
        UINT32_C(1001109523), UINT32_C(1216710575), UINT32_C(2952284757), UINT32_C(3834433081), UINT32_C(3842608301),
        UINT32_C(2467352408), UINT32_C(3974441264), UINT32_C(3256601745), UINT32_C(1409353924), UINT32_C(1329904859),
        UINT32_C(2307560293), UINT32_C(3125217879), UINT32_C(3622920184), UINT32_C(3832785684), UINT32_C(3882365951),
        UINT32_C(2308537115), UINT32_C(2659155028), UINT32_C(1450441945), UINT32_C(3532257603), UINT32_C(3186324194),
        UINT32_C(1225603425), UINT32_C(1124246549), UINT32_C(175808705),  UINT32_C(3009142319), UINT32_C(2796710159),
        UINT32_C(3651990107), UINT32_C(160762750),  UINT32_C(1902254979), UINT32_C(1698648476), UINT32_C(1134980669),
        UINT32_C(497144426),  UINT32_C(3302689335), UINT32_C(4057485630), UINT32_C(3603530763), UINT32_C(4087252587),
        UINT32_C(427812652),  UINT32_C(286876201),  UINT32_C(823134128),  UINT32_C(1627554964), UINT32_C(3745564327),
        UINT32_C(2589226092), UINT32_C(4202024494), UINT32_C(62878473),   UINT32_C(3275585894), UINT32_C(3987124064),
        UINT32_C(2791777159), UINT32_C(1916869511), UINT32_C(2585861905), UINT32_C(1375038919), UINT32_C(1403421920),
        UINT32_C(60249114),   UINT32_C(3811870450), UINT32_C(3021498009), UINT32_C(2612993202), UINT32_C(528933105),
        UINT32_C(2757361321), UINT32_C(3341402964), UINT32_C(2621861700), UINT32_C(273128190),  UINT32_C(4015252178),
        UINT32_C(3094781002), UINT32_C(1621621288), UINT32_C(2337611177), UINT32_C(1796718448), UINT32_C(1258965619),
        UINT32_C(4241913140), UINT32_C(2138560392), UINT32_C(3022190223), UINT32_C(4174180924), UINT32_C(450094611),
        UINT32_C(3274724580), UINT32_C(617150026),  UINT32_C(2704660665), UINT32_C(1469700689), UINT32_C(1341616587),
        UINT32_C(356715071),  UINT32_C(1188789960), UINT32_C(2278869135), UINT32_C(1766569160), UINT32_C(2795896635),
        UINT32_C(57824704),   UINT32_C(2893496380), UINT32_C(1235723989), UINT32_C(1630694347), UINT32_C(3927960522),
        UINT32_C(428891364),  UINT32_C(1814070806), UINT32_C(2287999787), UINT32_C(4125941184), UINT32_C(3968103889),
        UINT32_C(3548724050), UINT32_C(1025597707), UINT32_C(1404281500), UINT32_C(2002212197), UINT32_C(92429143),
        UINT32_C(2313943944), UINT32_C(2403086080), UINT32_C(3006180634), UINT32_C(3561981764), UINT32_C(1671860914),
        UINT32_C(1768520622), UINT32_C(1803542985), UINT32_C(844848113),  UINT32_C(3006139921), UINT32_C(1410888995),
        UINT32_C(1157749833), UINT32_C(2125704913), UINT32_C(1789979528), UINT32_C(1799263423), UINT32_C(741157179),
        UINT32_C(2405862309), UINT32_C(767040434),  UINT32_C(2655241390), UINT32_C(3663420179), UINT32_C(2172009096),
        UINT32_C(2511931187), UINT32_C(1680542666), UINT32_C(231857466),  UINT32_C(1154981000), UINT32_C(157168255),
        UINT32_C(1454112128), UINT32_C(3505872099), UINT32_C(1929775046), UINT32_C(2309422350), UINT32_C(2143329496),
        UINT32_C(2960716902), UINT32_C(407610648),  UINT32_C(2938108129), UINT32_C(2581749599), UINT32_C(538837155),
        UINT32_C(2342628867), UINT32_C(430543915),  UINT32_C(740188568),  UINT32_C(1937713272), UINT32_C(3315215132),
        UINT32_C(2085587024), UINT32_C(4030765687), UINT32_C(766054429),  UINT32_C(3517641839), UINT32_C(689721775),
        UINT32_C(1294158986), UINT32_C(1753287754), UINT32_C(4202601348), UINT32_C(1974852792), UINT32_C(33459103),
        UINT32_C(3568087535), UINT32_C(3144677435), UINT32_C(1686130825), UINT32_C(4134943013), UINT32_C(3005738435),
        UINT32_C(3599293386), UINT32_C(426570142),  UINT32_C(754104406),  UINT32_C(3660892564), UINT32_C(1964545167),
        UINT32_C(829466833),  UINT32_C(821587464),  UINT32_C(1746693036), UINT32_C(1006492428), UINT32_C(1595312919),
        UINT32_C(1256599985), UINT32_C(1024482560), UINT32_C(1897312280), UINT32_C(2902903201), UINT32_C(691790057),
        UINT32_C(1037515867), UINT32_C(3176831208), UINT32_C(1968401055), UINT32_C(2173506824), UINT32_C(1089055278),
        UINT32_C(1748401123), UINT32_C(2941380082), UINT32_C(968412354),  UINT32_C(1818753861), UINT32_C(2973200866),
        UINT32_C(3875951774), UINT32_C(1119354008), UINT32_C(3988604139), UINT32_C(1647155589), UINT32_C(2232450826),
        UINT32_C(3486058011), UINT32_C(3655784043), UINT32_C(3759258462), UINT32_C(847163678),  UINT32_C(1082052057),
        UINT32_C(989516446),  UINT32_C(2871541755), UINT32_C(3196311070), UINT32_C(3929963078), UINT32_C(658187585),
        UINT32_C(3664944641), UINT32_C(2175149170), UINT32_C(2203709147), UINT32_C(2756014689), UINT32_C(2456473919),
        UINT32_C(3890267390), UINT32_C(1293787864), UINT32_C(2830347984), UINT32_C(3059280931), UINT32_C(4158802520),
        UINT32_C(1561677400), UINT32_C(2586570938), UINT32_C(783570352),  UINT32_C(1355506163), UINT32_C(31495586),
        UINT32_C(3789437343), UINT32_C(3340549429), UINT32_C(2092501630), UINT32_C(896419368),  UINT32_C(671715824),
        UINT32_C(3530450081), UINT32_C(3603554138), UINT32_C(1055991716), UINT32_C(3442308219), UINT32_C(1499434728),
        UINT32_C(3130288473), UINT32_C(3639507000), UINT32_C(17769680),   UINT32_C(2259741420), UINT32_C(487032199),
        UINT32_C(4227143402), UINT32_C(3693771256), UINT32_C(1880482820), UINT32_C(3924810796), UINT32_C(381462353),
        UINT32_C(4017855991), UINT32_C(2452034943), UINT32_C(2736680833), UINT32_C(2209866385), UINT32_C(2128986379),
        UINT32_C(437874044),  UINT32_C(595759426),  UINT32_C(641721026),  UINT32_C(1636065708), UINT32_C(3899136933),
        UINT32_C(629879088),  UINT32_C(3591174506), UINT32_C(351984326),  UINT32_C(2638783544), UINT32_C(2348444281),
        UINT32_C(2341604660), UINT32_C(2123933692), UINT32_C(143443325),  UINT32_C(1525942256), UINT32_C(364660499),
        UINT32_C(599149312),  UINT32_C(939093251),  UINT32_C(1523003209), UINT32_C(106601097),  UINT32_C(376589484),
        UINT32_C(1346282236), UINT32_C(1297387043), UINT32_C(764598052),  UINT32_C(3741218111), UINT32_C(933457002),
        UINT32_C(1886424424), UINT32_C(3219631016), UINT32_C(525405256),  UINT32_C(3014235619), UINT32_C(323149677),
        UINT32_C(2038881721), UINT32_C(4100129043), UINT32_C(2851715101), UINT32_C(2984028078), UINT32_C(1888574695),
        UINT32_C(2014194741), UINT32_C(3515193880), UINT32_C(4180573530), UINT32_C(3461824363), UINT32_C(2641995497),
        UINT32_C(3179230245), UINT32_C(2902294983), UINT32_C(2217320456), UINT32_C(4040852155), UINT32_C(1784656905),
        UINT32_C(3311906931), UINT32_C(87498458),   UINT32_C(2752971818), UINT32_C(2635474297), UINT32_C(2831215366),
        UINT32_C(3682231106), UINT32_C(2920043893), UINT32_C(3772929704), UINT32_C(2816374944), UINT32_C(309949752),
        UINT32_C(2383758854), UINT32_C(154870719),  UINT32_C(385111597),  UINT32_C(1191604312), UINT32_C(1840700563),
        UINT32_C(872191186),  UINT32_C(2925548701), UINT32_C(1310412747), UINT32_C(2102066999), UINT32_C(1504727249),
        UINT32_C(3574298750), UINT32_C(1191230036), UINT32_C(3330575266), UINT32_C(3180292097), UINT32_C(3539347721),
        UINT32_C(681369118),  UINT32_C(3305125752), UINT32_C(3648233597), UINT32_C(950049240),  UINT32_C(4173257693),
        UINT32_C(1760124957), UINT32_C(512151405),  UINT32_C(681175196),  UINT32_C(580563018),  UINT32_C(1169662867),
        UINT32_C(4015033554), UINT32_C(2687781101), UINT32_C(699691603),  UINT32_C(2673494188), UINT32_C(1137221356),
        UINT32_C(123599888),  UINT32_C(472658308),  UINT32_C(1053598179), UINT32_C(1012713758), UINT32_C(3481064843),
        UINT32_C(3759461013), UINT32_C(3981457956), UINT32_C(3830587662), UINT32_C(1877191791), UINT32_C(3650996736),
        UINT32_C(988064871),  UINT32_C(3515461600), UINT32_C(4089077232), UINT32_C(2225147448), UINT32_C(1249609188),
        UINT32_C(2643151863), UINT32_C(3896204135), UINT32_C(2416995901), UINT32_C(1397735321), UINT32_C(3460025646)       
    };

	for (size_t i = 0; i < QFCL_ARRAY_SIZE(referenceValues); ++i)
	{
		mt19937::result_type mt_result = MT();
		mt19937::result_type ref_val = referenceValues[i];
		BOOST_REQUIRE_MESSAGE( mt_result == ref_val, "critical check MT() == referenceValues[i] [" 
			<< mt_result << " != " << ref_val << "] failed at iteration " << i);
	}
}

/*! \brief Tests mt19937_64 initialized with multiple seeds against the output provided
	by the authors of MT.
*/
BOOST_AUTO_TEST_CASE(multiSeedingMT19937_64)
{
	QFCL_CREATE_VECTOR(key, mt19937_64::result_type, 0x12345, 0x23456, 0x34567, 0x45678);

	BOOST_TEST_MESSAGE("Testing the ouput of the " << mpl::c_str<mt19937_64::name>::value << " generator initialized with 4 seeds: " 
		<< std::hex << std::showbase << key[0] << ", " << key[1] << ", " << key[2] << ", " << key[3] 
		<< " against the output provided by the MT authors ...");

	mt19937_64 MT( key.begin(), key.end() );

	static const mt19937_64::result_type referenceValues[] = {
		UINT64_C(7266447313870364031),  UINT64_C(4946485549665804864),  UINT64_C(16945909448695747420), UINT64_C(16394063075524226720), UINT64_C(4873882236456199058),
        UINT64_C(14877448043947020171), UINT64_C(6740343660852211943),  UINT64_C(13857871200353263164), UINT64_C(5249110015610582907),  UINT64_C(10205081126064480383),
        UINT64_C(1235879089597390050),  UINT64_C(17320312680810499042), UINT64_C(16489141110565194782), UINT64_C(8942268601720066061),  UINT64_C(13520575722002588570),
        UINT64_C(14226945236717732373), UINT64_C(9383926873555417063),  UINT64_C(15690281668532552105), UINT64_C(11510704754157191257), UINT64_C(15864264574919463609),
        UINT64_C(6489677788245343319),  UINT64_C(5112602299894754389),  UINT64_C(10828930062652518694), UINT64_C(15942305434158995996), UINT64_C(15445717675088218264),
        UINT64_C(4764500002345775851),  UINT64_C(14673753115101942098), UINT64_C(236502320419669032),   UINT64_C(13670483975188204088), UINT64_C(14931360615268175698),
        UINT64_C(8904234204977263924),  UINT64_C(12836915408046564963), UINT64_C(12120302420213647524), UINT64_C(15755110976537356441), UINT64_C(5405758943702519480),
        UINT64_C(10951858968426898805), UINT64_C(17251681303478610375), UINT64_C(4144140664012008120),  UINT64_C(18286145806977825275), UINT64_C(13075804672185204371),
        UINT64_C(10831805955733617705), UINT64_C(6172975950399619139),  UINT64_C(12837097014497293886), UINT64_C(12903857913610213846), UINT64_C(560691676108914154),
        UINT64_C(1074659097419704618),  UINT64_C(14266121283820281686), UINT64_C(11696403736022963346), UINT64_C(13383246710985227247), UINT64_C(7132746073714321322),
        UINT64_C(10608108217231874211), UINT64_C(9027884570906061560),  UINT64_C(12893913769120703138), UINT64_C(15675160838921962454), UINT64_C(2511068401785704737),
        UINT64_C(14483183001716371453), UINT64_C(3774730664208216065),  UINT64_C(5083371700846102796),  UINT64_C(9583498264570933637),  UINT64_C(17119870085051257224),
        UINT64_C(5217910858257235075),  UINT64_C(10612176809475689857), UINT64_C(1924700483125896976),  UINT64_C(7171619684536160599),  UINT64_C(10949279256701751503),
        UINT64_C(15596196964072664893), UINT64_C(14097948002655599357), UINT64_C(615821766635933047),   UINT64_C(5636498760852923045),  UINT64_C(17618792803942051220),
        UINT64_C(580805356741162327),   UINT64_C(425267967796817241),   UINT64_C(8381470634608387938),  UINT64_C(13212228678420887626), UINT64_C(16993060308636741960),
        UINT64_C(957923366004347591),   UINT64_C(6210242862396777185),  UINT64_C(1012818702180800310),  UINT64_C(15299383925974515757), UINT64_C(17501832009465945633),
        UINT64_C(17453794942891241229), UINT64_C(15807805462076484491), UINT64_C(8407189590930420827),  UINT64_C(974125122787311712),   UINT64_C(1861591264068118966),
        UINT64_C(997568339582634050),   UINT64_C(18046771844467391493), UINT64_C(17981867688435687790), UINT64_C(3809841506498447207),  UINT64_C(9460108917638135678),
        UINT64_C(16172980638639374310), UINT64_C(958022432077424298),   UINT64_C(4393365126459778813),  UINT64_C(13408683141069553686), UINT64_C(13900005529547645957),
        UINT64_C(15773550354402817866), UINT64_C(16475327524349230602), UINT64_C(6260298154874769264),  UINT64_C(12224576659776460914), UINT64_C(6405294864092763507),
        UINT64_C(7585484664713203306),  UINT64_C(5187641382818981381),  UINT64_C(12435998400285353380), UINT64_C(13554353441017344755), UINT64_C(646091557254529188),
        UINT64_C(11393747116974949255), UINT64_C(16797249248413342857), UINT64_C(15713519023537495495), UINT64_C(12823504709579858843), UINT64_C(4738086532119935073),
        UINT64_C(4429068783387643752),  UINT64_C(585582692562183870),   UINT64_C(1048280754023674130),  UINT64_C(6788940719869959076),  UINT64_C(11670856244972073775),
        UINT64_C(2488756775360218862),  UINT64_C(2061695363573180185),  UINT64_C(6884655301895085032),  UINT64_C(3566345954323888697),  UINT64_C(12784319933059041817),
        UINT64_C(4772468691551857254),  UINT64_C(6864898938209826895),  UINT64_C(7198730565322227090),  UINT64_C(2452224231472687253),  UINT64_C(13424792606032445807),
        UINT64_C(10827695224855383989), UINT64_C(11016608897122070904), UINT64_C(14683280565151378358), UINT64_C(7077866519618824360),  UINT64_C(17487079941198422333),
        UINT64_C(3956319990205097495),  UINT64_C(5804870313319323478),  UINT64_C(8017203611194497730),  UINT64_C(3310931575584983808),  UINT64_C(5009341981771541845),
        UINT64_C(6930001938490791874),  UINT64_C(14415278059151389495), UINT64_C(11001114762641844083), UINT64_C(6715939435439735925),  UINT64_C(411419160297131328),
        UINT64_C(4522402260441335284),  UINT64_C(3381955501804126859),  UINT64_C(15935778656111987797), UINT64_C(4345051260540166684),  UINT64_C(13978444093099579683),
        UINT64_C(9219789505504949817),  UINT64_C(9245142924137529075),  UINT64_C(11628184459157386459), UINT64_C(7242398879359936370),  UINT64_C(8511401943157540109),
        UINT64_C(11948130810477009827), UINT64_C(6865450671488705049),  UINT64_C(13965005347172621081), UINT64_C(15956599226522058336), UINT64_C(7737868921014130584),
        UINT64_C(2107342503741411693),  UINT64_C(15818996300425101108), UINT64_C(16399939197527488760), UINT64_C(13971145494081508107), UINT64_C(3910681448359868691),
        UINT64_C(4249175367970221090),  UINT64_C(9735751321242454020),  UINT64_C(12418107929362160460), UINT64_C(241792245481991138),   UINT64_C(5806488997649497146),
        UINT64_C(10724207982663648949), UINT64_C(1121862814449214435),  UINT64_C(1326996977123564236),  UINT64_C(4902706567834759475),  UINT64_C(12782714623891689967),
        UINT64_C(7306216312942796257),  UINT64_C(15681656478863766664), UINT64_C(957364844878149318),   UINT64_C(5651946387216554503),  UINT64_C(8197027112357634782),
        UINT64_C(6302075516351125977),  UINT64_C(13454588464089597862), UINT64_C(15638309200463515550), UINT64_C(10116604639722073476), UINT64_C(12052913535387714920),
        UINT64_C(2889379661594013754),  UINT64_C(15383926144832314187), UINT64_C(7841953313015471731),  UINT64_C(17310575136995821873), UINT64_C(9820021961316981626),
        UINT64_C(15319619724109527290), UINT64_C(15349724127275899898), UINT64_C(10511508162402504492), UINT64_C(6289553862380300393),  UINT64_C(15046218882019267110),
        UINT64_C(11772020174577005930), UINT64_C(3537640779967351792),  UINT64_C(6801855569284252424),  UINT64_C(17687268231192623388), UINT64_C(12968358613633237218),
        UINT64_C(1429775571144180123),  UINT64_C(10427377732172208413), UINT64_C(12155566091986788996), UINT64_C(16465954421598296115), UINT64_C(12710429690464359999),
        UINT64_C(9547226351541565595),  UINT64_C(12156624891403410342), UINT64_C(2985938688676214686),  UINT64_C(18066917785985010959), UINT64_C(5975570403614438776),
        UINT64_C(11541343163022500560), UINT64_C(11115388652389704592), UINT64_C(9499328389494710074),  UINT64_C(9247163036769651820),  UINT64_C(3688303938005101774),
        UINT64_C(2210483654336887556),  UINT64_C(15458161910089693228), UINT64_C(6558785204455557683),  UINT64_C(1288373156735958118),  UINT64_C(18433986059948829624),
        UINT64_C(3435082195390932486),  UINT64_C(16822351800343061990), UINT64_C(3120532877336962310),  UINT64_C(16681785111062885568), UINT64_C(7835551710041302304),
        UINT64_C(2612798015018627203),  UINT64_C(15083279177152657491), UINT64_C(6591467229462292195),  UINT64_C(10592706450534565444), UINT64_C(7438147750787157163),
        UINT64_C(323186165595851698),   UINT64_C(7444710627467609883),  UINT64_C(8473714411329896576),  UINT64_C(2782675857700189492),  UINT64_C(3383567662400128329),
        UINT64_C(3200233909833521327),  UINT64_C(12897601280285604448), UINT64_C(3612068790453735040),  UINT64_C(8324209243736219497),  UINT64_C(15789570356497723463),
        UINT64_C(1083312926512215996),  UINT64_C(4797349136059339390),  UINT64_C(5556729349871544986),  UINT64_C(18266943104929747076), UINT64_C(1620389818516182276),
        UINT64_C(172225355691600141),   UINT64_C(3034352936522087096),  UINT64_C(1266779576738385285),  UINT64_C(3906668377244742888),  UINT64_C(6961783143042492788),
        UINT64_C(17159706887321247572), UINT64_C(4676208075243319061),  UINT64_C(10315634697142985816), UINT64_C(13435140047933251189), UINT64_C(716076639492622016),
        UINT64_C(13847954035438697558), UINT64_C(7195811275139178570),  UINT64_C(10815312636510328870), UINT64_C(6214164734784158515),  UINT64_C(16412194511839921544),
        UINT64_C(3862249798930641332),  UINT64_C(1005482699535576005),  UINT64_C(4644542796609371301),  UINT64_C(17600091057367987283), UINT64_C(4209958422564632034),
        UINT64_C(5419285945389823940),  UINT64_C(11453701547564354601), UINT64_C(9951588026679380114),  UINT64_C(7425168333159839689),  UINT64_C(8436306210125134906),
        UINT64_C(11216615872596820107), UINT64_C(3681345096403933680),  UINT64_C(5770016989916553752),  UINT64_C(11102855936150871733), UINT64_C(11187980892339693935),
        UINT64_C(396336430216428875),   UINT64_C(6384853777489155236),  UINT64_C(7551613839184151117),  UINT64_C(16527062023276943109), UINT64_C(13429850429024956898),
        UINT64_C(9901753960477271766),  UINT64_C(9731501992702612259),  UINT64_C(5217575797614661659),  UINT64_C(10311708346636548706), UINT64_C(15111747519735330483),
        UINT64_C(4353415295139137513),  UINT64_C(1845293119018433391),  UINT64_C(11952006873430493561), UINT64_C(3531972641585683893),  UINT64_C(16852246477648409827),
        UINT64_C(15956854822143321380), UINT64_C(12314609993579474774), UINT64_C(16763911684844598963), UINT64_C(16392145690385382634), UINT64_C(1545507136970403756),
        UINT64_C(17771199061862790062), UINT64_C(12121348462972638971), UINT64_C(12613068545148305776), UINT64_C(954203144844315208),   UINT64_C(1257976447679270605),
        UINT64_C(3664184785462160180),  UINT64_C(2747964788443845091),  UINT64_C(15895917007470512307), UINT64_C(15552935765724302120), UINT64_C(16366915862261682626),
        UINT64_C(8385468783684865323),  UINT64_C(10745343827145102946), UINT64_C(2485742734157099909),  UINT64_C(916246281077683950),   UINT64_C(15214206653637466707),
        UINT64_C(12895483149474345798), UINT64_C(1079510114301747843),  UINT64_C(10718876134480663664), UINT64_C(1259990987526807294),  UINT64_C(8326303777037206221),
        UINT64_C(14104661172014248293), UINT64_C(15531278677382192198), UINT64_C(3874303698666230242),  UINT64_C(3611366553819264523),  UINT64_C(1358753803061653874),
        UINT64_C(1552102816982246938),  UINT64_C(14492630642488100979), UINT64_C(15001394966632908727), UINT64_C(2273140352787320862),  UINT64_C(17843678642369606172),
        UINT64_C(2903980458593894032),  UINT64_C(16971437123015263604), UINT64_C(12969653681729206264), UINT64_C(3593636458822318001),  UINT64_C(9719758956915223015),
        UINT64_C(7437601263394568346),  UINT64_C(3327758049015164431),  UINT64_C(17851524109089292731), UINT64_C(14769614194455139039), UINT64_C(8017093497335662337),
        UINT64_C(12026985381690317404), UINT64_C(739616144640253634),   UINT64_C(15535375191850690266), UINT64_C(2418267053891303448),  UINT64_C(15314073759564095878),
        UINT64_C(10333316143274529509), UINT64_C(16565481511572123421), UINT64_C(16317667579273275294), UINT64_C(13991958187675987741), UINT64_C(3753596784796798785),
        UINT64_C(9078249094693663275),  UINT64_C(8459506356724650587),  UINT64_C(12579909555010529099), UINT64_C(7827737296967050903),  UINT64_C(5489801927693999341),
        UINT64_C(10995988997350541459), UINT64_C(14721747867313883304), UINT64_C(7915884580303296560),  UINT64_C(4105766302083365910),  UINT64_C(12455549072515054554),
        UINT64_C(13602111324515032467), UINT64_C(5205971628932290989),  UINT64_C(5034622965420036444),  UINT64_C(9134927878875794005),  UINT64_C(11319873529597990213),
        UINT64_C(14815445109496752058), UINT64_C(2266601052460299470),  UINT64_C(5696993487088103383),  UINT64_C(6540200741841280242),  UINT64_C(6631495948031875490),
        UINT64_C(5328340585170897740),  UINT64_C(17897267040961463930), UINT64_C(9030000260502624168),  UINT64_C(14285709137129830926), UINT64_C(12854071997824681544),
        UINT64_C(15408328651008978682), UINT64_C(1063314403033437073),  UINT64_C(13765209628446252802), UINT64_C(242013711116865605),   UINT64_C(4772374239432528212),
        UINT64_C(2515855479965038648),  UINT64_C(5872624715703151235),  UINT64_C(14237704570091006662), UINT64_C(678604024776645862),   UINT64_C(12329607334079533339),
        UINT64_C(17570877682732917020), UINT64_C(2695443415284373666),  UINT64_C(4312672841405514468),  UINT64_C(6454343485137106900),  UINT64_C(8425658828390111343),
        UINT64_C(16335501385875554899), UINT64_C(5551095603809016713),  UINT64_C(11781094401885925035), UINT64_C(9395557946368382509),  UINT64_C(9765123360948816956),
        UINT64_C(18107191819981188154), UINT64_C(16049267500594757404), UINT64_C(16349966108299794199), UINT64_C(1040405303135858246),  UINT64_C(2366386386131378192),
        UINT64_C(223761048139910454),   UINT64_C(15375217587047847934), UINT64_C(15231693398695187454), UINT64_C(12916726640254571028), UINT64_C(8878036960829635584),
        UINT64_C(1626201782473074365),  UINT64_C(5758998126998248293),  UINT64_C(18077917959300292758), UINT64_C(10585588923088536745), UINT64_C(15072345664541731497),
        UINT64_C(3559348759319842667),  UINT64_C(12744591691872202375), UINT64_C(2388494115860283059),  UINT64_C(6414691845696331748),  UINT64_C(3069528498807764495),
        UINT64_C(8737958486926519702),  UINT64_C(18059264986425101074), UINT64_C(3139684427605102737),  UINT64_C(12378931902986734693), UINT64_C(410666675039477949),
        UINT64_C(12139894855769838924), UINT64_C(5780722552400398675),  UINT64_C(7039346665375142557),  UINT64_C(3020733445712569008),  UINT64_C(2612305843503943561),
        UINT64_C(13651771214166527665), UINT64_C(16478681918975800939), UINT64_C(566088527565499576),   UINT64_C(4715785502295754870),  UINT64_C(6957318344287196220),
        UINT64_C(11645756868405128885), UINT64_C(13139951104358618000), UINT64_C(17650948583490040612), UINT64_C(18168787973649736637), UINT64_C(5486282999836125542),
        UINT64_C(6122201977153895166),  UINT64_C(17324241605502052782), UINT64_C(10063523107521105867), UINT64_C(17537430712468011382), UINT64_C(10828407533637104262),
        UINT64_C(10294139354198325113), UINT64_C(12557151830240236401), UINT64_C(16673044307512640231), UINT64_C(10918020421896090419), UINT64_C(11077531235278014145),
        UINT64_C(5499571814940871256),  UINT64_C(2334252435740638702),  UINT64_C(18177461912527387031), UINT64_C(2000007376901262542),  UINT64_C(7968425560071444214),
        UINT64_C(1472650787501520648),  UINT64_C(3115849849651526279),  UINT64_C(7980970700139577536),  UINT64_C(12153253535907642097), UINT64_C(8109716914843248719),
        UINT64_C(3154976533165008908),  UINT64_C(5553369513523832559),  UINT64_C(10345792701798576501), UINT64_C(3677445364544507875),  UINT64_C(10637177623943913351),
        UINT64_C(7380255087060498096),  UINT64_C(14479400372337014801), UINT64_C(15381362583330700960), UINT64_C(204531043189704802),   UINT64_C(13699106540959723942),
        UINT64_C(3817903465872254783),  UINT64_C(10972364467110284934), UINT64_C(2701394334530963810),  UINT64_C(2931625600749229147),  UINT64_C(16428252083632828910),
        UINT64_C(11873166501966812913), UINT64_C(5566810080537233762),  UINT64_C(7840617383807795056),  UINT64_C(10699413880206684652), UINT64_C(18259119259617231436),
        UINT64_C(10332714341486317526), UINT64_C(10137911902863059694), UINT64_C(669146221352346842),   UINT64_C(8373571610024623455),  UINT64_C(10620002450820868661),
        UINT64_C(12220730820779815970), UINT64_C(5902974968095412898),  UINT64_C(7931010481705150841),  UINT64_C(16413777368097063650), UINT64_C(11273457888324769727),
        UINT64_C(13719113891065284171), UINT64_C(8327795098009702553),  UINT64_C(10333342364827584837), UINT64_C(6202832891413866653),  UINT64_C(9137034567886143162),
        UINT64_C(14514450826524340059), UINT64_C(473610156015331016),   UINT64_C(813689571029117640),   UINT64_C(13776316799690285717), UINT64_C(10429708855338427756),
        UINT64_C(8995290140880620858),  UINT64_C(2320123852041754384),  UINT64_C(8082864073645003641),  UINT64_C(6961777411740398590),  UINT64_C(10008644283003991179),
        UINT64_C(3239064015890722333),  UINT64_C(16762634970725218787), UINT64_C(16467281536733948427), UINT64_C(10563290046315192938), UINT64_C(5108560603794851559),
        UINT64_C(15121667220761532906), UINT64_C(14155440077372845941), UINT64_C(10050536352394623377), UINT64_C(15474881667376037792), UINT64_C(3448088038819200619),
        UINT64_C(3692020001240358871),  UINT64_C(6444847992258394902),  UINT64_C(8687650838094264665),  UINT64_C(3028124591188972359),  UINT64_C(16945232313401161629),
        UINT64_C(15547830510283682816), UINT64_C(3982930188609442149),  UINT64_C(14270781928849894661), UINT64_C(13768475593433447867), UINT64_C(13815150225221307677),
        UINT64_C(8502397232429564693),  UINT64_C(718377350715476994),   UINT64_C(7459266877697905475),  UINT64_C(8353375565171101521),  UINT64_C(7807281661994435472),
        UINT64_C(16924127046922196149), UINT64_C(10157812396471387805), UINT64_C(2519858716882670232),  UINT64_C(7384148884750265792),  UINT64_C(8077153156180046901),
        UINT64_C(3499231286164597752),  UINT64_C(2700106282881469611),  UINT64_C(14679824700835879737), UINT64_C(14188324938219126828), UINT64_C(3016120398601032793),
        UINT64_C(10858152824243889420), UINT64_C(9412371965669250534),  UINT64_C(4857522662584941069),  UINT64_C(984331743838900386),   UINT64_C(4094160040294753142),
        UINT64_C(2368635764350388458),  UINT64_C(15101240511397838657), UINT64_C(15584415763303953578), UINT64_C(7831857200208015446),  UINT64_C(1952643641639729063),
        UINT64_C(4184323302594028609),  UINT64_C(16795120381104846695), UINT64_C(3541559381538365280),  UINT64_C(15408472870896842474), UINT64_C(5628362450757896366),
        UINT64_C(16277348886873708846), UINT64_C(12437047172652330846), UINT64_C(10172715019035948149), UINT64_C(1999700669649752791),  UINT64_C(6217957085626135027),
        UINT64_C(11220551167830336823), UINT64_C(16478747645632411810), UINT64_C(5437280487207382147),  UINT64_C(11382378739613087836), UINT64_C(15866932785489521505),
        UINT64_C(5502694314775516684),  UINT64_C(16440179278067648435), UINT64_C(15510104554374162846), UINT64_C(15722061259110909195), UINT64_C(10760687291786964354),
        UINT64_C(10736868329920212671), UINT64_C(4166148127664495614),  UINT64_C(14303518358120527892), UINT64_C(9122250801678898571),  UINT64_C(10028508179936801946),
        UINT64_C(216630713752669403),   UINT64_C(10655207865433859491), UINT64_C(4041437116174699233),  UINT64_C(6280982262534375348),  UINT64_C(297501356638818866),
        UINT64_C(13976146806363377485), UINT64_C(13752396481560145603), UINT64_C(11472199956603637419), UINT64_C(16393728429143900496), UINT64_C(14752844047515986640),
        UINT64_C(1524477318846038424),  UINT64_C(6596889774254235440),  UINT64_C(1591982099532234960),  UINT64_C(8065146456116391065),  UINT64_C(3964696017750868345),
        UINT64_C(17040425970526664920), UINT64_C(11511165586176539991), UINT64_C(3443401252003315103),  UINT64_C(16314977947073778249), UINT64_C(16860120454903458341),
        UINT64_C(5370503221561340846),  UINT64_C(15362920279125264094), UINT64_C(2822458124714999779),  UINT64_C(14575378304387898337), UINT64_C(9689406052675046032),
        UINT64_C(2872149351415175149),  UINT64_C(13019620945255883050), UINT64_C(14929026760148695825), UINT64_C(8503417349692327218),  UINT64_C(9677798905341573754),
        UINT64_C(828949921821462483),   UINT64_C(16110482368362750196), UINT64_C(15794218816553655671), UINT64_C(14942910774764855088), UINT64_C(12026350906243760195),
        UINT64_C(13610867176871462505), UINT64_C(18324536557697872582), UINT64_C(2658962269666727629),  UINT64_C(327225403251576027),   UINT64_C(9207535177029277544),
        UINT64_C(8744129291351887858),  UINT64_C(6129603385168921503),  UINT64_C(18385497655031085907), UINT64_C(13024478718952333892), UINT64_C(14547683159720717167),
        UINT64_C(5932119629366981711),  UINT64_C(325385464632594563),   UINT64_C(3559879386019806291),  UINT64_C(6629264948665231298),  UINT64_C(14358245326238118181),
        UINT64_C(15662449672706340765), UINT64_C(13975503159145803297), UINT64_C(3609534220891499022),  UINT64_C(4224273587485638227),  UINT64_C(9274084767162416370),
        UINT64_C(13156843921244091998), UINT64_C(18284750575626858789), UINT64_C(14664767920489118779), UINT64_C(11292057742031803221), UINT64_C(13919998707305829132),
        UINT64_C(14473305049457001422), UINT64_C(9696877879685767807),  UINT64_C(1406758246007973837),  UINT64_C(2429517644459056881),  UINT64_C(14361215588101587430),
        UINT64_C(11386164476149757528), UINT64_C(10474116023593331839), UINT64_C(2921165656527786564),  UINT64_C(15604610369733358953), UINT64_C(12955027028676000544),
        UINT64_C(10314281035410779907), UINT64_C(3167047178514709947),  UINT64_C(1088721329408346700),  UINT64_C(17930425515478182741), UINT64_C(7466411836095405617),
        UINT64_C(15534027454610690575), UINT64_C(10879629128927506091), UINT64_C(11502219301371200635), UINT64_C(13915106894453889418), UINT64_C(4226784327815861027),
        UINT64_C(12335222183627106346), UINT64_C(3648499746356007767),  UINT64_C(18441388887898023393), UINT64_C(18117929843327093625), UINT64_C(4237736098094830438),
        UINT64_C(14229123019768296655), UINT64_C(3930112058127932690),  UINT64_C(12663879236019645778), UINT64_C(9281161952002617309),  UINT64_C(4978473890680876319),
        UINT64_C(845759387067546611),   UINT64_C(1386164484606776333),  UINT64_C(8008554770639925512),  UINT64_C(11159581016793288971), UINT64_C(18065390393740782906),
        UINT64_C(17647985458967631018), UINT64_C(9092379465737744314),  UINT64_C(2914678236848656327),  UINT64_C(4376066698447630270),  UINT64_C(16057186499919087528),
        UINT64_C(3031333261848790078),  UINT64_C(2926746602873431597),  UINT64_C(7931945763526885287),  UINT64_C(147649915388326849),   UINT64_C(15801792398814946230),
        UINT64_C(5265900391686545347),  UINT64_C(16173686275871890830), UINT64_C(7562781050481886043),  UINT64_C(5853506575839330404),  UINT64_C(14957980734704564792),
        UINT64_C(10944286556353523404), UINT64_C(1783009880614150597),  UINT64_C(9529762028588888983),  UINT64_C(822992871011696119),   UINT64_C(2130074274744257510),
        UINT64_C(8000279549284809219),  UINT64_C(3514744284158856431),  UINT64_C(128770032569293263),   UINT64_C(3737367602618100572),  UINT64_C(16364836605077998543),
        UINT64_C(783266423471782696),   UINT64_C(4569418252658970391),  UINT64_C(11093950688157406886), UINT64_C(14888808512267628166), UINT64_C(4217786261273670948),
        UINT64_C(17047486076688645713), UINT64_C(14133826721458860485), UINT64_C(17539744882220127106), UINT64_C(12394675039129853905), UINT64_C(5757634999463277090),
        UINT64_C(9621947619435861331),  UINT64_C(1182210208559436772),  UINT64_C(14603391040490913939), UINT64_C(17481976703660945893), UINT64_C(14063388816234683976),
        UINT64_C(2046622692581829572),  UINT64_C(8294969799792017441),  UINT64_C(5293778434844788058),  UINT64_C(17976364049306763808), UINT64_C(399482430848083948),
        UINT64_C(16495545010129798933), UINT64_C(15241340958282367519), UINT64_C(989828753826900814),   UINT64_C(17616558773874893537), UINT64_C(2471817920909589004),
        UINT64_C(11764082277667899978), UINT64_C(9618755269550400950),  UINT64_C(1240014743757147125),  UINT64_C(1887649378641563002),  UINT64_C(1842982574728131416),
        UINT64_C(13243531042427194002), UINT64_C(7688268125537013927),  UINT64_C(3080422097287486736),  UINT64_C(2562894809975407783),  UINT64_C(12428984115620094788),
        UINT64_C(1355581933694478148),  UINT64_C(9895969242586224966),  UINT64_C(8628445623963160889),  UINT64_C(4298916726468199239),  UINT64_C(12773165416305557280),
        UINT64_C(5240726258301567487),  UINT64_C(4975412836403427561),  UINT64_C(1842172398579595303),  UINT64_C(7812151462958058676),  UINT64_C(17974510987263071769),
        UINT64_C(14980707022065991200), UINT64_C(18294903201142729875), UINT64_C(12911672684850242753), UINT64_C(8979482998667235743),  UINT64_C(16808468362384462073),
        UINT64_C(5981317232108359798),  UINT64_C(12373702800369335100), UINT64_C(16119707581920094765), UINT64_C(2782738549717633602),  UINT64_C(15454155188515389391),
        UINT64_C(16495638000603654629), UINT64_C(16348757069342790497), UINT64_C(7769562861984504567),  UINT64_C(17504300515449231559), UINT64_C(5557710032938318996),
        UINT64_C(11846125204788401203), UINT64_C(13957316349928882624), UINT64_C(2738350683717432043),  UINT64_C(15738068448047700954), UINT64_C(6224714837294524999),
        UINT64_C(6081930777706411111),  UINT64_C(11366312928059597928), UINT64_C(4355315799925031482),  UINT64_C(12393324728734964015), UINT64_C(15277140291994338591),
        UINT64_C(1406052433297386355),  UINT64_C(15859448364509213398), UINT64_C(1672805458341158435),  UINT64_C(2926095111610982994),  UINT64_C(11056431822276774455),
        UINT64_C(12083767323511977430), UINT64_C(3296968762229741153),  UINT64_C(12312076899982286460), UINT64_C(17769284994682227273), UINT64_C(15349428916826953443),
        UINT64_C(1056147296359223910),  UINT64_C(18305757538706977431), UINT64_C(6214378374180465222),  UINT64_C(14279648441175008454), UINT64_C(17791306410319136644),
        UINT64_C(956593013486324072),   UINT64_C(2921235772936241950),  UINT64_C(10002890515925652606), UINT64_C(10399654693663712506), UINT64_C(6446247931049971441),
        UINT64_C(6380465770144534958),  UINT64_C(11439178472613251620), UINT64_C(10131486500045494660), UINT64_C(3692642123868351947),  UINT64_C(10972816599561388940),
        UINT64_C(4931112976348785580),  UINT64_C(8213967169213816566),  UINT64_C(15336469859637867841), UINT64_C(15026830342847689383), UINT64_C(7524668622380765825),
        UINT64_C(17309937346758783807), UINT64_C(372780684412666438),   UINT64_C(5642417144539399955),  UINT64_C(18303842993081194577), UINT64_C(11085303253831702827),
        UINT64_C(15658163165983586950), UINT64_C(8517521928922081563),  UINT64_C(16091186344159989860), UINT64_C(17614656488010863910), UINT64_C(4736067146481515156),
        UINT64_C(13449945221374241354), UINT64_C(17755469346196579408), UINT64_C(13300502638545717375), UINT64_C(6611828134763118043),  UINT64_C(14177591906740276597),
        UINT64_C(9340430243077460347),  UINT64_C(7499765399826404087),  UINT64_C(3409518087967832469),  UINT64_C(9013253864026602045),  UINT64_C(4444307427984430192),
        UINT64_C(3729283608700519712),  UINT64_C(13642048880719588383), UINT64_C(16486557958022946240), UINT64_C(2996465014991157904),  UINT64_C(10020049344596426576),
        UINT64_C(12302485648009883778), UINT64_C(8492591321344423126),  UINT64_C(17407986443716172520), UINT64_C(10530482934957373052), UINT64_C(15740662350540828750),
        UINT64_C(1790629986901049436),  UINT64_C(6305948377669917188),  UINT64_C(15092985352503125323), UINT64_C(928505047232899787),   UINT64_C(14404651977039851607),
        UINT64_C(7564177565277805597),  UINT64_C(3411236815351677870),  UINT64_C(7752718145953236134),  UINT64_C(12315979971311483798), UINT64_C(12477729506691004724),
        UINT64_C(14654956300924793305), UINT64_C(6689803038918974388),  UINT64_C(1540738812233000153),  UINT64_C(13508351811701989957), UINT64_C(15864432023192136053),
        UINT64_C(7990997967273843917),  UINT64_C(7424300239290765161),  UINT64_C(39585249496300263),    UINT64_C(3877436595063283319),  UINT64_C(10710642254398044448),
        UINT64_C(4653804418844456375),  UINT64_C(1232267496410380283),  UINT64_C(3690525514009038824),  UINT64_C(15459770765077428485), UINT64_C(13240346522153894145),
        UINT64_C(5674964360688390624),  UINT64_C(16973644653010587289), UINT64_C(15924280764204855206), UINT64_C(15196708627253442662), UINT64_C(17596174821341373274),
        UINT64_C(16196745023027393691), UINT64_C(6980050627399795351),  UINT64_C(17582264380857746637), UINT64_C(18170372407506856324), UINT64_C(12108126025631005514),
        UINT64_C(15687749089493373169), UINT64_C(5814107289258228434),  UINT64_C(9381977959648494876),  UINT64_C(15895601183088112734), UINT64_C(16267869075651604263),
        UINT64_C(15228381979765852785), UINT64_C(11949618678312581999), UINT64_C(4545324791131029438),  UINT64_C(582725409406225185),   UINT64_C(15282520250746126790),
        UINT64_C(14758446535973412711), UINT64_C(7605613563088071833),  UINT64_C(1111140641057375915),  UINT64_C(5364843095234852245),  UINT64_C(218335432181198977),
        UINT64_C(4891472444796201742),  UINT64_C(4564628942836375772),  UINT64_C(15500501278323817088), UINT64_C(4913946328556108657),  UINT64_C(2684786251736694229),
        UINT64_C(12090498456116310122), UINT64_C(5310885782157038567),  UINT64_C(5032788439854011923),  UINT64_C(12627401038822728242), UINT64_C(11869662610126430929),
        UINT64_C(17650156853043540226), UINT64_C(12126672500118808436), UINT64_C(10437658933435653256), UINT64_C(13133995470637873311), UINT64_C(4601324715591152820),
        UINT64_C(1874350460376708372),  UINT64_C(5808688626286061164),  UINT64_C(13777088437302430376), UINT64_C(5018451954762213522),  UINT64_C(2588296738534474754),
        UINT64_C(5503414509154170711),  UINT64_C(5230497186769951796),  UINT64_C(13261090710400573914), UINT64_C(8515217303152165705),  UINT64_C(11074538219737365303),
        UINT64_C(15481562385740613213), UINT64_C(12705484409881007350), UINT64_C(14221931471178549498), UINT64_C(12905633420087112297), UINT64_C(17337759164357146506),
        UINT64_C(14081997515778175224), UINT64_C(17384320185513122939), UINT64_C(7131793076779216692),  UINT64_C(17483217190312403109), UINT64_C(900692047897995877),
        UINT64_C(14723287313048560400), UINT64_C(6132094372965340305),  UINT64_C(7572797575350925726),  UINT64_C(12725160700431903514), UINT64_C(380860122911632449),
        UINT64_C(1900504978569024571),  UINT64_C(8423729759529914138),  UINT64_C(7305587201606052334),  UINT64_C(12446871355267313320), UINT64_C(4615812356515386206),
        UINT64_C(3361817115406652303),  UINT64_C(17690418922000878428), UINT64_C(14632214537567910559), UINT64_C(2709702289926174775),  UINT64_C(3459675155951086144),
        UINT64_C(7788364399926538150),  UINT64_C(16043992474431955950), UINT64_C(15830963823784930267), UINT64_C(4216893617835797954),  UINT64_C(538159724689093771),
        UINT64_C(16029152738918251363), UINT64_C(14444848757576686696), UINT64_C(12941757045272633696), UINT64_C(10900480525147953314), UINT64_C(12547307449905859302),
        UINT64_C(16001571796892398181), UINT64_C(407942194622690676),   UINT64_C(13873235372903944444), UINT64_C(18071603799493008777), UINT64_C(1015646077646778622),
        UINT64_C(9387605808959554815),  UINT64_C(11566702442022019410), UINT64_C(7061722181092883183),  UINT64_C(2629032108249254109),  UINT64_C(5271820053177594520),
        UINT64_C(12640880742139693547), UINT64_C(10098688629735675775), UINT64_C(5716304472850923064),  UINT64_C(3312674502353063071),  UINT64_C(7295926377425759633),
        UINT64_C(833281439103466115),   UINT64_C(16316743519466861667), UINT64_C(9912050326606348167),  UINT64_C(11651133878100804242), UINT64_C(18026798122431692459),
        UINT64_C(6157758321723692663),  UINT64_C(4856021830695749349),  UINT64_C(7074321707293278978),  UINT64_C(10748097797809573561), UINT64_C(2949954440753264783),
        UINT64_C(9813922580940661152),  UINT64_C(9949237950172138336),  UINT64_C(15643982711269455885), UINT64_C(16078663425810239127), UINT64_C(12508044395364228880),
        UINT64_C(12920301578340189344), UINT64_C(15368071871011048915), UINT64_C(1610400750626363239),  UINT64_C(11994736084146033126), UINT64_C(6042574085746186088),
        UINT64_C(4154587549267685807),  UINT64_C(15915752367312946034), UINT64_C(1191196620621769193),  UINT64_C(467437822242538360),   UINT64_C(2836463788873877488),
        UINT64_C(10476401302029164984), UINT64_C(1716169985450737419),  UINT64_C(5327734953288310341),  UINT64_C(3994170067185955262),  UINT64_C(884431883768190063),
        UINT64_C(11019001754831208284), UINT64_C(14322807384384895215), UINT64_C(161011537360955545),   UINT64_C(1466223959660131656),  UINT64_C(5227048585229497539),
        UINT64_C(12410731857504225031), UINT64_C(2142243279080761103),  UINT64_C(17682826799106851430), UINT64_C(1792612570704179953),  UINT64_C(14727410295243056025),
        UINT64_C(1459567192481221274),  UINT64_C(5669760721687603135),  UINT64_C(17507918443756456845), UINT64_C(10354471145847018200), UINT64_C(10362475129248202288),
        UINT64_C(13143844410150939443), UINT64_C(6861184673150072028),  UINT64_C(18396524361124732580), UINT64_C(543906666394301875),   UINT64_C(12476817828199026728),
        UINT64_C(11853496871128122868), UINT64_C(12747674713108891748), UINT64_C(7986179867749890282),  UINT64_C(9158195177777627533),  UINT64_C(2217320706811118570),
        UINT64_C(8631389005200569973),  UINT64_C(5538133061362648855),  UINT64_C(3369942850878700758),  UINT64_C(7813559982698427184),  UINT64_C(509051590411815948),
        UINT64_C(10197035660403006684), UINT64_C(13004818533162292132), UINT64_C(9831652587047067687),  UINT64_C(7619315254749630976),  UINT64_C(994412663058993407)
	};

	for (size_t i = 0; i < QFCL_ARRAY_SIZE(referenceValues); ++i)
	{
		mt19937_64::result_type mt_result = MT();
		mt19937_64::result_type ref_val = referenceValues[i];
		BOOST_REQUIRE_MESSAGE( mt_result == ref_val, "critical check MT() == referenceValues[i] [" 
			<< mt_result << " != " << ref_val << "] failed at iteration " << i);
	}
}

//! Testing EqualityComparable concept
BOOST_AUTO_TEST_CASE_TEMPLATE(equality, Engine, mersenne_twister_engines)
{
	if( qfcl::tmp::is_first<mersenne_twister_engines, Engine>::value )
		BOOST_TEST_MESSAGE("Testing operator== ...");

	QFCL_CREATE_VECTOR(key, unsigned long, 12345, 67890, 1111111111u, 0);
	Engine mt( key.begin(), key.end() );
	
#ifdef QFCL_VERBOSE_TEST
	print_engine_name(mt, " ...");
#endif	// QFCL_VERBOSE_TEST

	const size_t advance_distance = 13;

	// advance the generator
	for (size_t i = 0; i < advance_distance; ++i)
		mt();

	std::stringstream ss, ss_copy, alt_ss;
	ss << mt;
	ss_copy << mt;

	// alter one of the a single bit in the stream
	Engine::result_type first;
	ss >> first;
	first ^= 1;
	alt_ss << first << ' ';
	// copy the rest of ss to alt_ss
	alt_ss << ss.rdbuf();

	// the first test is very similar to the streaming test case
	Engine mtOther;
	ss_copy >> mtOther;
	BOOST_CHECK(mt == mtOther);
	BOOST_CHECK(mtOther == mt);

	// make sure change 1 bit has an effect
	BOOST_CHECK_THROW(alt_ss >> mtOther, std::domain_error);
	BOOST_CHECK(mt != mtOther);
	BOOST_CHECK(mtOther != mt);
}

//! Tests for agreement between constructors and seed member functions
BOOST_AUTO_TEST_CASE_TEMPLATE(ctor_seed, Engine, mersenne_twister_engines)
{
	if( qfcl::tmp::is_first<mersenne_twister_engines, Engine>::value )
		BOOST_TEST_MESSAGE("Testing user-provided seeds/states via constructors and the seed member function ...");
	
#ifdef QFCL_VERBOSE_TEST
	print_engine_name( Engine(), " ..." );
#endif	// QFCL_VERBOSE_TEST

	/* default seed */

	Engine mt1;

	// use something other than default seed
	const Engine::result_type seed1 = 0;
	Engine mtSeed(seed1);
	BOOST_CHECK(mt1 != mtSeed);
	// set to default seed
	mtSeed.seed();
	BOOST_CHECK(mt1 == mtSeed);

	/* single seed */

	// must be different from seed1
	const Engine::result_type seed2 = 209419383;
	BOOST_REQUIRE_NE(seed1, seed2);
	Engine mt2(seed2);
	BOOST_CHECK(mt2 != mtSeed);
	mtSeed.seed(seed2);
	BOOST_CHECK(mt2 == mtSeed);

	/* multiple seeds */

	// test with a large number of seeds: > n
	const size_t numSeeds = Engine::state_size * 2;
	std::vector<Engine::result_type> seed_array(numSeeds);
	for (size_t i = 0; i < numSeeds; ++i)
		seed_array[i] = i;
	Engine mt3( seed_array.begin(), seed_array.end() );
	// make sure they are not accidentally the same
	BOOST_REQUIRE(mt3 != mtSeed);
	mtSeed.seed( seed_array.begin(), seed_array.end() );
	BOOST_CHECK(mt3 == mtSeed);

	/* state */

	Engine::result_type state_array[Engine::state_size];
	// make up some state
	for (size_t i = 0; i < Engine::state_size; ++i)
		state_array[i] = i;
	// this will be invalid as is
	BOOST_CHECK_THROW(Engine mt4(state_array), std::domain_error);
	// correct the extra bits in the state
	Engine::state s(state_array);
	Engine::correct(s);
	Engine mt4(s);
	BOOST_REQUIRE(mt4 != mtSeed);
	// seeding with an incorrect state will throw
	BOOST_REQUIRE_THROW(mtSeed.seed(state_array), std::domain_error);
	mtSeed.seed(s);
	BOOST_CHECK(mt4 == mtSeed);
}

BOOST_AUTO_TEST_SUITE_END()

//!	@}

